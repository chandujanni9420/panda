Q1. How do you load a CSV file into a Pandas DataFrame?
  Load the CSV into a DataFrame: import pandas as pd. df =pd.read_csv('data.csv') 
Print the DataFrame without the to_string() method: import pandas as pd. ...
Check the number of maximum returned rows: import pandas as pd. ...
Increase the maximum number of rows to display the entire DataFrame: import pandas as pd.

Q2. How do you select rows from a Pandas DataFrame based on a condition?
Boolean indexing ( df[df['col'] == value ] )

Positional indexing ( df.iloc[...] )

Label indexing ( df.xs(...) )

df.query(...) 
Q2. How do you check the data type of a column in a Pandas DataFrame?

To check the data type in pandas DataFrame we can use the “dtype” attribute. The attribute returns a series with the data type of each column. And the column names of the DataFrame are represented as the index of the resultant series object and the corresponding data types are returned as values of the series object.

Q4. How do you rename columns in a Pandas DataFrame?
One way of renaming the columns in a Pandas Dataframe is by using the rename() function. This method is quite useful when we need to rename some selected columns because we need to specify information only for the columns which are to be renamed

Q5. How do you drop columns in a Pandas DataFrame?
pandas. DataFrame. drop() method is used to remove the columns from the DataFrame, by default it doesn't remove on the existing DataFrame instead it returns a new DataFrame after dropping the columns specified with the drop method. In order to remove columns on the existing DataFrame object use inplace=True param.

Q6. How do you find the unique values in a column of a Pandas DataFrame?
You can get unique values in column (multiple columns) from pandas DataFrame using unique() or Series. unique() functions. unique() from Series is used to get unique values from a single column and the other one is used to get from multiple columns.

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?
We can find the missing values as
Count NaN values under a single DataFrame column: df['column name'].isna().sum()
Count NaN values under an entire DataFrame: df.isna().sum().sum()
Count NaN values across a single DataFrame row: df.loc[[index value]].isna().sum().sum()


Q8. How do you fill missing values in a Pandas DataFrame with a specific value?
The fillna() function iterates through your dataset and fills all empty rows with a specified value. This could be the mean, median, modal, or any other value.

Q9. How do you concatenate two Pandas DataFrames?
We'll pass two d
DataFrames 1to pd. concat() method in the form of a list and mention in which axis you want to concat, i.e. axis=0 to concat along rows, axis=1 to concat along columns.

Q10. How do you merge two Pandas DataFrames on a specific column?
We can merge two Pandas DataFrames on certain columns using the merge function by simply specifying the certain columns for merge. Example1: Let's create a Dataframe and then merge them into a single dataframe. Creating a Dataframe: Python3.

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?
groupby() function is used to split the data into groups based on some criteria. pandas objects can be split on any of their axes. The abstract definition of grouping is to provide a mapping of labels to group names. sort : Sort group keys.

Q12. How do you pivot a Pandas DataFrame?
The pivot() function is used to reshaped a given DataFrame organized by given index / column values. This function does not support data aggregation, multiple values will result in a MultiIndex in the columns. Column to use to make new frame's index. If None, uses existing index.

Q13. How do you change the data type of a column in a Pandas DataFrame?
In order to convert data types in pandas, there are three basic options: Use astype() to force an appropriate dtype. Create a custom function to convert the data. Use pandas functions such as to_numeric() or to_datetime()

Q14. How do you sort a Pandas DataFrame by a specific column?
To sort the DataFrame based on the values in a single column, you'll use . sort_values() . By default, this will return a new DataFrame sorted in ascending order. It does not modify the original DataFrame.

Q15. How do you create a copy of a Pandas DataFrame?
The copy() method returns a copy of the DataFrame. By default, the copy is a "deep copy" meaning that any changes made in the original DataFrame will NOT be reflected in the copy.

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?
Using Loc to Filter With Multiple Conditions

The loc function in pandas can be used to access groups of rows or columns by label. Add each condition you want to be included in the filtered result and concatenate them with the & operator. You'll see our code sample will return a pd. dataframe of our filtered rows.

Q17. How do you calculate the mean of a column in a Pandas DataFrame?
To get column average or mean from pandas DataFrame use either mean() and describe() method. The DataFrame. mean() method is used to return the mean of the values for the requested axis.

Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?
Standard deviation is calculated using the function . std() . However, the Pandas library creates the Dataframe object and then the function . std() is applied on that Dataframe .

Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?
By using corr() function we can get the correlation between two columns in the dataframe.

Q20. How do you select specific columns in a DataFrame using their labels?
This is the most basic way to select a single column from a dataframe, just put the string name of the column in brackets. Returns a pandas series. Passing a list in the brackets lets you select multiple columns at the same time.

Q21. How do you select specific rows in a DataFrame using their indexes?
iloc selects rows based on an integer index. So, if you want to select the 5th row in a DataFrame, you would use df. iloc[[4]] since the first row is at index 0, the second row is at index 1, and so on

Q22. How do you sort a DataFrame by a specific column?
To sort the DataFrame based on the values in a single column, you'll use . sort_values() . By default, this will return a new DataFrame sorted in ascending order. It does not modify the original DataFrame.

Q23. How do you create a new column in a DataFrame based on the values of another column?
Using apply() method

If you need to apply a method over an existing column in order to compute some values that will eventually be added as a new column in the existing DataFrame, then pandas. DataFrame. apply() method should do the trick.

Q24. How do you remove duplicates from a DataFrame?
Return DataFrame with duplicate rows removed. Considering certain columns is optional. Indexes, including time indexes are ignored.

Q25. What is the difference between .loc and .iloc in Pandas?
The main difference between pandas loc[] vs iloc[] is loc gets DataFrame rows & columns by labels/names and iloc[] gets by integer Index/position. For loc[], if the label is not present it gives a key error. For iloc[], if the position is not present it gives an index error.